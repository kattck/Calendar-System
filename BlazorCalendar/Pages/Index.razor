@page "/"

   <!-- Header -->
    <header>

        <h3 class="ms-fontSize-42 ms-fontweight-Regular">Welcome to Admin Calendar -- Beta Preview</h3>

        <!-- Not Authenticated Users-->
        <AuthorizeView>
            <NotAuthorized>
              <a href="authentication/login" class="microsoft-login-button shadow-effect"><img src = "Assets/Images/Windows-Logo-PNG-Free-Image.png" alt="">Sign In</a>
            </NotAuthorized>
        </AuthorizeView>
    </header>


<AuthorizeView>
    <!-- Only allowed for Authorized AD users  w/in tennant -->
    <Authorized>
    <!-- Calendar Component -->
    <div class  = "row">
    
        <!-- Calendar -->
        <div class="col-sm-12 col-md-12 col-lg-9">
            <Calendar>
                <DayTemplate Context="day">
                    @{
                        string currentDayClass = day.Date == DateTime.Now.Date ? "current-day" : "";
                        string selectedDayClass = day == selectedDay ? "selected-day" : "";
                    }
                    @if(!day.IsEmpty)
                    {
                        <div class="day shadow-effect @currentDayClass @selectedDayClass" @onclick ="() => selectedDay = day" >
                            <h3 class="ms-fontSize-24 ms-fontWeight-regular">@day.DayNumber</h3>

                            <!-- If Condition to open First Event listed by Time. This could change base off API status -->
                            @if(day.Events != null && day.Events.Count !=0){

                                var firstEvent = day.Events.FirstOrDefault();

                                <div class="day-event @firstEvent.Color">
                                    
                                    <!-- If To catch If Subject is too long -->
                                    @if(firstEvent.Subject.Length > 25){
                                        @firstEvent.Subject.Substring(0,25)<text>...</text>
                                    }
                                    else{
                                        @firstEvent.Subject
                                    }
                                </div>
                            }

                        </div>
                    }
                </DayTemplate>
            </Calendar>
       </div>


       <!--============================== Day Menu =========================================-->
      <div class="col-sm-12 col-md-12 col-lg-3">
        <AddEvent SelectedDay="selectedDay"/>

        <EventsList SelectedDay ="selectedDay"/>
      </div>

    </div>
        
    </Authorized>
</AuthorizeView>
            


    <!-- Add Event Selection Code -->

    @code{

        private CalendarDay selectedDay = new CalendarDay{

            Date = DateTime.Now
        };

        protected override void OnInitialized()
                {
                    AddEvent.OnEventAdded += () =>{

                         StateHasChanged();   
                    };
                    base.OnInitialized();
                }
    }